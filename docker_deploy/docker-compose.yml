version: "3.7"

services:
  db:
    container_name: postgresdb
    image: postgres:latest
    restart: unless-stopped #always
    env_file:
      - project.env
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data

#  mysql:
#    container_name: mysql
#    image: mysql:8.0
#    restart: unless-stopped
#    env_file:
#      - ../wpa_project/wpa_project.env
#    command: '--default-authentication-plugin=mysql_native_password'
#    ports:
#      - 3306:3306
#    volumes:
#      - mysql_data:/var/lib/mysql
#
  web:
    container_name: django
    build:
      context: ..
      dockerfile: docker_deploy/Dockerfile
    command: gunicorn wpa_project.wsgi:application --bind 0.0.0.0:8000 --workers=4

    ports:
      - 8000:8000
    depends_on:
      - db
    volumes:
      - staticfiles:/home/app/web/staticfiles

  wordpress:
    container_name: wordpress
    image: wordpress:latest
#    depends_on:
#      - mysql
    ports:
      - 8080:80
      - 8081:443
    restart: always
    environment:
      WORDPRESS_DB_HOST: mysql:3306
      WORDPRESS_DB_USER: wordpress_user
      WORDPRESS_DB_PASSWORD: wordpress_password
    volumes:
      - ../wordpress:/var/www/html

  nginx:
    container_name: nginx

    image: nginx:mainline-alpine
#    restart: unless-stopped #always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ../nginx:/etc/nginx
      - staticfiles:/app/static/
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
#      - photo-static:/photo_app/static
#      - photo-media:/photo_media/media
    depends_on:
      - web
      - wordpress
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    container_name: certbot
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  default:
    name: my-app-net

volumes:
  postgres-data:
  staticfiles:
#  photo-media:
#    name: photo-media
#    external: true
#  photo-static:
#    name: photo-static
#    external: true
