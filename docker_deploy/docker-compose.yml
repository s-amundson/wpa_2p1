version: "3.7"

services:
  db:
    container_name: postgresdb
    image: postgres:latest
    restart: unless-stopped #always
    env_file:
      - project.env
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data

  mysql:
    container_name: mysql
    image: mysql:8.0
    restart: unless-stopped
    env_file:
      - ./wordpress.env
    command: '--default-authentication-plugin=mysql_native_password'
    ports:
      - 3306:3306
    volumes:
      - mysql_data:/var/lib/mysql

  django:
    container_name: django
    build:
      context: ..
      dockerfile: docker_deploy/Dockerfile
    command: gunicorn wpa_project.wsgi:application --bind 0.0.0.0:8000 --workers=4

    ports:
      - 8000:8000
    depends_on:
      - db
    volumes:
      - staticfiles:/home/app/web/staticfiles
      - media:/home/app/web/student_app/media

  wordpress:
    container_name: wordpress

    build:
      context: ..
      dockerfile: docker_deploy/Dockerfile_wordpress

#    image: wordpress:5.8.2-fpm-alpine
    depends_on:
      - mysql
    ports:
      - 8080:80
      - 8081:443
    restart: always
    env_file:
      - ./wordpress.env
    volumes:
      - ../wordpress/wp-content:/var/www/html/wp-content

  nginx:
    container_name: nginx

    image: nginx:mainline-alpine
    restart: unless-stopped #always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ../nginx:/etc/nginx
      - staticfiles:/app/static/
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      - ../wordpress:/var/www/html
      - media:/app/media

    depends_on:
      - django
      - wordpress
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    container_name: certbot
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  default:
    name: my-app-net

volumes:
  postgres-data:
  staticfiles:
  mysql_data:
  media:
