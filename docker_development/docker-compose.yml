version: "3.7"

services:
  django:
    container_name: django_dev
    env_file:
      - ../wpa_project/wpa_project.env
    image: &django django
    build:
      context: ..
      dockerfile: docker_development/Dockerfile
    #    command: python manage.py runserver 0.0.0.0:8000
    command: python manage.py runsslserver 0.0.0.0:8000

    volumes:
      - ../wpa_project:/code
    ports:
      - 8000:8000
    depends_on:
      - db

  celery:
    container_name: celery_dev
    image: *django
    restart: 'no'
    entrypoint: celery -A wpa_project worker -l INFO
    volumes:
      - ../wpa_project:/code
    env_file:
      - ../wpa_project/wpa_project.env
    depends_on:
      - db
      - rabbitmq3
      - django

  db:
#    command: postgres -c max_wal_senders=10 -c max_replication_slots=10 -c wal_keep_size=5 -c max_slot_wal_keep_size=-1 -c wal_sender_timeout=60s -c track_commit_timestamp=off
#    command: postgres -c config_file=
    container_name: devdb
    image: postgres:14
    restart: 'no' #always
    env_file:
      - ../wpa_project/wpa_project.env
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
#    command: pg_upgrade
  bkupdb:
    image: postgres:14
    restart: 'no' #always
    env_file:
      - ../wpa_project/wpa_project.env
    ports:
      - 15432:5432
    volumes:
      - ./db_backup/wpa:/var/lib/postgresql/data

  rabbitmq3:
    container_name: "rabbitmq_dev"
    image: rabbitmq:3-management-alpine
    env_file:
      - ../wpa_project/wpa_project.env
    ports:
      - 5672:5672
      - 15672:15672

networks:
  default:
    name: my-app-net
    driver: bridge
    ipam:
      config:
      - subnet: 172.16.57.0/24
#    external: true

volumes:
  postgres-data:
  staticfiles:
#  mysql_data: