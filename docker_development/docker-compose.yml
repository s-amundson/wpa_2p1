services:
  django:
    container_name: django_dev
    env_file:
      - ../wpa_project/wpa_project.env
    image: &django django
    build:
      context: ..
      dockerfile: docker_development/Dockerfile
    command: python manage.py runsslserver 0.0.0.0:8000

    volumes:
      - ../wpa_project:/code
    ports:
      - "8000:8000"
    depends_on:
      - db

  celery:
    container_name: celery_dev
    image: *django
    restart: 'no'
    entrypoint: celery -A wpa_project worker --beat --scheduler django --loglevel=info
    volumes:
      - ../wpa_project:/code
    env_file:
      - ../wpa_project/wpa_project.env
    depends_on:
      - db
      - rabbitmq3
      - django

  db:
    command: postgres -c config_file=conf/postgres.conf
    container_name: devdb
    image: postgres:14
    restart: 'no' #always
    env_file:
      - ../wpa_project/wpa_project.env
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./ps_master_conf:/conf

#  bkupdb:
#    command: postgres -c config_file=conf/postgres.conf
#    image: postgres:14
#    restart: 'no' #always
#    entrypoint: ["/conf/replicate.sh"]
#    env_file:
#      - ./replicate.env
#    ports:
#      - "15432:5432"
#    volumes:
#      - ./db_backup/rep/bkup:/var/lib/postgresql/data
#      - ./ps_rep_conf:/conf
#    depends_on:
#      - db

  rabbitmq3:
    container_name: "rabbitmq_dev"
    image: rabbitmq:3-management-alpine
    env_file:
      - ../wpa_project/wpa_project.env
    ports:
      - "5672:5672"
      - "15672:15672"

networks:
  default:
    name: "my-app-net"
    driver: bridge
    ipam:
      config:
      - subnet: 172.16.57.0/24
    external: true

volumes:
  postgres-data:
  staticfiles:
